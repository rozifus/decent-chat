;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name decent-chat.handlers, :imports nil, :requires {db decent-chat.db, decent-chat.db decent-chat.db, re-frame.core re-frame.core, re-frame re-frame.core}, :uses nil, :defs {allocate-next-id {:protocol-inline nil, :meta {:arglists (quote ([todos])), :doc "Returns the next daypart id.\n  Assumes dayaprts are sorted.\n  Returns one more than the current largest id.", :end-column 23, :end-line 7, :column 7, :line 7, :file "/home/rozifus/Work/projects/decent-chat/src/cljs/decent_chat/handlers.cljs"}, :name decent-chat.handlers/allocate-next-id, :variadic false, :file "src/cljs/decent_chat/handlers.cljs", :end-column 23, :method-params ([todos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([todos])), :doc "Returns the next daypart id.\n  Assumes dayaprts are sorted.\n  Returns one more than the current largest id.", :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:initialize-db :send-message :messages :id :content], :seen #{:initialize-db :content :send-message :messages :id}}, :doc nil}